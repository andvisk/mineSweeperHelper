/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
}

import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

java {
  toolchain {
    languageVersion.set(JavaLanguageVersion.of(17))
  }
}

javafx {
    version = "17"
    modules = ['javafx.controls']
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.3'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.3'
    implementation group: 'org.openpnp', name: 'opencv', version: '4.5.4-0'
    testImplementation 'org.mockito:mockito-core:3.7.7'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.7.7'
    
}

tasks.withType(Test) {
    testLogging {
        // set options for log level LIFECYCLE
        events TestLogEvent.FAILED,
               TestLogEvent.PASSED,
               TestLogEvent.SKIPPED,
               TestLogEvent.STANDARD_OUT
        exceptionFormat TestExceptionFormat.FULL
        showExceptions true
        showCauses true
        showStackTraces true

        // set options for log level DEBUG and INFO
        debug {
            events TestLogEvent.STARTED,
                   TestLogEvent.FAILED,
                   TestLogEvent.PASSED,
                   TestLogEvent.SKIPPED,
                   TestLogEvent.STANDARD_ERROR,
                   TestLogEvent.STANDARD_OUT
            exceptionFormat TestExceptionFormat.FULL
        }
        info.events = debug.events
        info.exceptionFormat = debug.exceptionFormat

        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} passed, ${result.failedTestCount} failed, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}

application {
    // Define the main class for the application.
    mainClass = 'minesweeperhelper.App'
}

sourceSets {
    main {
         java {
            srcDirs = ['src/main/java','src/main/resources']
         }
    }

    test {
        java {
            srcDirs = ['src/test/java','src/test/resources']
        }
    }
}

test {
    useJUnitPlatform()
}

import org.apache.tools.ant.taskdefs.condition.Os

run {
    jvmArgs = [
            '--enable-preview'
    ]
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        systemProperties['java.library.path'] = 'C:/opencv/build/java/x64'
    } else {
        systemProperties['java.library.path'] = '/usr/local/share/java/opencv4'
    }    
}
